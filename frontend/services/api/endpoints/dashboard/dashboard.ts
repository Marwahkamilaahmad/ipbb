/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.0
 */
import useSwr from 'swr';
import type {
  Key,
  SWRConfiguration
} from 'swr';

import { clientFetcher } from '../../../../lib/orval/mutator';
import type { ErrorType } from '../../../../lib/orval/mutator';


  
  type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];


  
/**
 * @summary Get Dashboard Stats
 */
export const dashboardGetDashboardStats = (
    
 options?: SecondParameter<typeof clientFetcher>) => {
    return clientFetcher<unknown>(
    {url: `/api/dashboard/stats`, method: 'GET'
    },
    options);
  }



export const getDashboardGetDashboardStatsKey = () => [`/api/dashboard/stats`] as const;

export type DashboardGetDashboardStatsQueryResult = NonNullable<Awaited<ReturnType<typeof dashboardGetDashboardStats>>>
export type DashboardGetDashboardStatsQueryError = ErrorType<unknown>

/**
 * @summary Get Dashboard Stats
 */
export const useDashboardGetDashboardStats = <TError = ErrorType<unknown>>(
   options?: { swr?:SWRConfiguration<Awaited<ReturnType<typeof dashboardGetDashboardStats>>, TError> & { swrKey?: Key, enabled?: boolean }, request?: SecondParameter<typeof clientFetcher> }
) => {
  const {swr: swrOptions, request: requestOptions} = options ?? {}

  const isEnabled = swrOptions?.enabled !== false
  const swrKey = swrOptions?.swrKey ?? (() => isEnabled ? getDashboardGetDashboardStatsKey() : null);
  const swrFn = () => dashboardGetDashboardStats(requestOptions)

  const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(swrKey, swrFn, swrOptions)

  return {
    swrKey,
    ...query
  }
}
